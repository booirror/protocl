allprojects {
	apply plugin: "java"
    apply plugin: "idea"
    apply plugin: "eclipse"
    
    [compileJava, compileTestJava]*.options*.encoding = "UTF-8"
	eclipse {
    	jdt {
        	sourceCompatibility = 1.8
        	targetCompatibility = 1.8
		}
        classpath {
            downloadSources = true
            downloadJavadoc = false
        }
    }
    
      repositories {
    	//maven { url "http://127.0.0.1:8081/nexus/content/repositories/libs/" } 
		maven {url "http://maven.oschina.net/content/groups/public/"}
     	mavenCentral()
    }
}

subprojects {
	group = "com.uxuan.protobuf"
	version = "1.0.1"
	
    ext {
        appName = "protobuf"
    }
    
    dependencies {
		//compile("com.uxuan:uxuan-common:1.0.1")
        testCompile("junit:junit:4.11")
        /*
        compile("com.uxuan:uxuan-common:1.0.1"){  transitive=false }
        testCompile("junit:junit:4.11") {
            exclude(group:"org.hamcrest", module:"hamcrest-core")
        }*/
        //runtime("ch.qos.logback:logback-classic:1.1.2")
        //testRuntime("ch.qos.logback:logback-core:1.1.2")
    }
    
	task afterEclipseImport(description: "", group: "IDE") {
		doLast {
	    	def classpath = new XmlParser().parse(file(".classpath"))
	    	classpath.children().forEach {
	    		def atts = it.attributes()
	    		if (atts.get("kind") == "output") 
	    		atts.put("path", "build/classes")
	    	}
	    	
	    	def writer = new FileWriter(file(".classpath"))
	    	def printer = new XmlNodePrinter(new PrintWriter(writer))
	    	printer.setPreserveWhitespace(true)
	    	printer.print(classpath)
	  	}
 	}
}

task wrapper(type: Wrapper) {  
   	gradleVersion = "2.1"  
	distributionUrl = "http://192.168.1.200/gradle-2.1-all.zip" 
}
